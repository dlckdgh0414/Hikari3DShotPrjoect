//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Member/Khy/Input/InputControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControlls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControlls"",
    ""maps"": [
        {
            ""name"": ""PlayerMap"",
            ""id"": ""63427c31-8bb5-4513-8cac-36a4c53f07a5"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""f5e3bdbb-b3c1-4e0e-a460-3e3d7705dfb9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftWing"",
                    ""type"": ""Button"",
                    ""id"": ""0096a424-e018-4c08-8246-b407e545f393"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightWing"",
                    ""type"": ""Button"",
                    ""id"": ""87fb17d2-5a35-4719-9782-06316abdd31c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""8f602a7c-a04a-45c3-82b2-538d7bc43a6d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AutoAim"",
                    ""type"": ""Button"",
                    ""id"": ""ead454a1-0c02-4f86-9283-4c8d113e51a0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""ec8dc92a-1e3d-467b-9895-22f99be22dc7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirSkill"",
                    ""type"": ""Button"",
                    ""id"": ""eadf97cd-2806-4171-9bab-3f53c0ae7ba9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecSkill"",
                    ""type"": ""Button"",
                    ""id"": ""142c0f45-dea0-4584-9474-5f7fb525f4f2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrSkill"",
                    ""type"": ""Button"",
                    ""id"": ""a7fab605-5c92-4efe-8bbb-60e2ff06d6bb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f086b38c-b37d-4408-bea0-525a2194e5cf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d02afee8-1102-4612-a134-0e99702fb98c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a81a5d63-4cc6-4d30-906c-4b4f95a99d56"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MoveVector"",
                    ""id"": ""fb77c1f9-85a6-4532-bfb4-fb2a0735eed3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b6169ed8-9813-4e84-a727-c7a2d282f3e2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8ae69bed-7a4c-45b8-8a76-607e41626b4e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0321073e-2614-411f-81ba-90cfb84112c9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6667d2b5-1148-4ad1-9286-f1e2c0b7a8a1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""23773085-1371-4aac-b2a6-03a7af728415"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AutoAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30b8ebaa-547a-4b7a-a3a8-fa810b705704"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4191121f-5030-47f6-b7a2-0a1c795eee07"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1f9e6b6-3e59-48fa-a07c-3f399c576c97"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""944972d6-a2ef-4178-87ea-6b0a88c8afe7"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMap
        m_PlayerMap = asset.FindActionMap("PlayerMap", throwIfNotFound: true);
        m_PlayerMap_Attack = m_PlayerMap.FindAction("Attack", throwIfNotFound: true);
        m_PlayerMap_LeftWing = m_PlayerMap.FindAction("LeftWing", throwIfNotFound: true);
        m_PlayerMap_RightWing = m_PlayerMap.FindAction("RightWing", throwIfNotFound: true);
        m_PlayerMap_Move = m_PlayerMap.FindAction("Move", throwIfNotFound: true);
        m_PlayerMap_AutoAim = m_PlayerMap.FindAction("AutoAim", throwIfNotFound: true);
        m_PlayerMap_Aim = m_PlayerMap.FindAction("Aim", throwIfNotFound: true);
        m_PlayerMap_FirSkill = m_PlayerMap.FindAction("FirSkill", throwIfNotFound: true);
        m_PlayerMap_SecSkill = m_PlayerMap.FindAction("SecSkill", throwIfNotFound: true);
        m_PlayerMap_ThrSkill = m_PlayerMap.FindAction("ThrSkill", throwIfNotFound: true);
    }

    ~@InputControlls()
    {
        UnityEngine.Debug.Assert(!m_PlayerMap.enabled, "This will cause a leak and performance issues, InputControlls.PlayerMap.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMap
    private readonly InputActionMap m_PlayerMap;
    private List<IPlayerMapActions> m_PlayerMapActionsCallbackInterfaces = new List<IPlayerMapActions>();
    private readonly InputAction m_PlayerMap_Attack;
    private readonly InputAction m_PlayerMap_LeftWing;
    private readonly InputAction m_PlayerMap_RightWing;
    private readonly InputAction m_PlayerMap_Move;
    private readonly InputAction m_PlayerMap_AutoAim;
    private readonly InputAction m_PlayerMap_Aim;
    private readonly InputAction m_PlayerMap_FirSkill;
    private readonly InputAction m_PlayerMap_SecSkill;
    private readonly InputAction m_PlayerMap_ThrSkill;
    public struct PlayerMapActions
    {
        private @InputControlls m_Wrapper;
        public PlayerMapActions(@InputControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_PlayerMap_Attack;
        public InputAction @LeftWing => m_Wrapper.m_PlayerMap_LeftWing;
        public InputAction @RightWing => m_Wrapper.m_PlayerMap_RightWing;
        public InputAction @Move => m_Wrapper.m_PlayerMap_Move;
        public InputAction @AutoAim => m_Wrapper.m_PlayerMap_AutoAim;
        public InputAction @Aim => m_Wrapper.m_PlayerMap_Aim;
        public InputAction @FirSkill => m_Wrapper.m_PlayerMap_FirSkill;
        public InputAction @SecSkill => m_Wrapper.m_PlayerMap_SecSkill;
        public InputAction @ThrSkill => m_Wrapper.m_PlayerMap_ThrSkill;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMapActionsCallbackInterfaces.Add(instance);
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @LeftWing.started += instance.OnLeftWing;
            @LeftWing.performed += instance.OnLeftWing;
            @LeftWing.canceled += instance.OnLeftWing;
            @RightWing.started += instance.OnRightWing;
            @RightWing.performed += instance.OnRightWing;
            @RightWing.canceled += instance.OnRightWing;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @AutoAim.started += instance.OnAutoAim;
            @AutoAim.performed += instance.OnAutoAim;
            @AutoAim.canceled += instance.OnAutoAim;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @FirSkill.started += instance.OnFirSkill;
            @FirSkill.performed += instance.OnFirSkill;
            @FirSkill.canceled += instance.OnFirSkill;
            @SecSkill.started += instance.OnSecSkill;
            @SecSkill.performed += instance.OnSecSkill;
            @SecSkill.canceled += instance.OnSecSkill;
            @ThrSkill.started += instance.OnThrSkill;
            @ThrSkill.performed += instance.OnThrSkill;
            @ThrSkill.canceled += instance.OnThrSkill;
        }

        private void UnregisterCallbacks(IPlayerMapActions instance)
        {
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @LeftWing.started -= instance.OnLeftWing;
            @LeftWing.performed -= instance.OnLeftWing;
            @LeftWing.canceled -= instance.OnLeftWing;
            @RightWing.started -= instance.OnRightWing;
            @RightWing.performed -= instance.OnRightWing;
            @RightWing.canceled -= instance.OnRightWing;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @AutoAim.started -= instance.OnAutoAim;
            @AutoAim.performed -= instance.OnAutoAim;
            @AutoAim.canceled -= instance.OnAutoAim;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @FirSkill.started -= instance.OnFirSkill;
            @FirSkill.performed -= instance.OnFirSkill;
            @FirSkill.canceled -= instance.OnFirSkill;
            @SecSkill.started -= instance.OnSecSkill;
            @SecSkill.performed -= instance.OnSecSkill;
            @SecSkill.canceled -= instance.OnSecSkill;
            @ThrSkill.started -= instance.OnThrSkill;
            @ThrSkill.performed -= instance.OnThrSkill;
            @ThrSkill.canceled -= instance.OnThrSkill;
        }

        public void RemoveCallbacks(IPlayerMapActions instance)
        {
            if (m_Wrapper.m_PlayerMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMapActions @PlayerMap => new PlayerMapActions(this);
    public interface IPlayerMapActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnLeftWing(InputAction.CallbackContext context);
        void OnRightWing(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnAutoAim(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnFirSkill(InputAction.CallbackContext context);
        void OnSecSkill(InputAction.CallbackContext context);
        void OnThrSkill(InputAction.CallbackContext context);
    }
}
